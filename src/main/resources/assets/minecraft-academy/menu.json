{
  "Введение": {
    "О платформе": {
      "content": "Данная платформа предназначена для обучения основам робототехники в игровой среде Minecraft. Игроки могут создавать, программировать и тестировать поведение виртуального робота в симулированной среде с использованием языка Python. Платформа поддерживает сенсоры, обмен данными по сети и режим многопользовательского взаимодействия."
    },
    "Установка": {
      "content": "Все что нужно для программирования роботов в MinecraftAcademy: мод (который у вас уже есть), модуль для общения с сервером на языке Python (https://github.com/coffeecoder1337/MinecraftAcademyFabric)"
    }
  },
  "Команды": {
    "Комнаты": {
      "content": "/create_room — создать комнату\n/leave_room — покинуть комнату\n/invite <игрок> <роль> — пригласить игрока\n\nКаждый игрок в комнате обладает ролью. Существует всего 3 роли: ADMIN, OPERATOR, OBSERVER.\n\nADMIN - может размещать в комнате специальные блоки: блок старта (розовый), блок финиша (синий), блок интереса (зеленый). Также игрок с этой ролью может разрушать все блоки в комнате (кроме стеклянных границ комнаты), а также управлять разрешением на запуск робота при помощи команды /allow_run <target> <true/false>, где target либо all - разрешить/запретить запуск всем, либо ник игрока.\n\nИгрок с ролью OPERTATOR может ставить лишь выданные ему блоки шерсти. Пользователь с этой ролью может разрушать только свои блоки.\n\nИгрок с ролью OBSERVER является наблюдателем и не может произодить никаких действий внутри комнаты. Робот для игрока с этой ролью размещен не будет."
    },
    "Скрытие игроков": {
      "content": "Чтобы не отвелкаться на других участников комнаты и их роботов, мод предоставляет команду /hide с различным набором параметров:\n\n/hide player <all или имя игрока> - скрывает всех игроков кроме вас, если задан параметр all, либо же скрывает игрока с указанным ником\n\n/hide robot <all или имя игрока> - аналогично предыдущей команде скрывает всех роботов кроме вашего, либо же робота игрока с указанным ником"
    }
  },
  "Первые шаги": {
    "Что такое токен": {
      "content": "Токен - это ваш личный ключ для общения с роботом. Токен выдается при входе на сервер первым сообщением.\nОткройте чат и, нажав на токен, скопируйте его."
    },
    "Пример простой программы": {
      "content": "Для того, чтобы произвести первый запуск робота, выполните по порядку следующие инструкции:\n1. Нажмите на кнопку 'Перейти к уровню'\n2. Создайте файл, например, main.py и перепечатайте в него следующий код:\n\nfrom minecraft_academy import MinecraftAcademy\nrobot = MinecraftAcademy('IP адрес сервера Майнкрафт либо 127.0.0.1 если вы играете в одиночном режиме', 'ваш токен из майнкрафта')\nrobot.start()\ntry:\n    while True:\n        robot.control(100, 0)\nExcept KeyboardInterrupt:\n    robot.stop()\n\nЗапустите код при помощи команды python main.py или же кнопки старт в вашем редакторе кода.\nЭтот код заставит робота двигаться по прямой линии. Как только робот достигнет финиша, то будет остановлен и перемещен вновь на точку старта.\nПосле прохождения остановите программу сочетанием клавиш CTRL+C.\nДля повторного запуска робота напишите /allow_run all и заново запустите программу.\nЕсли во время прохождения робот застрял, то остановите выполнение программы, выполните команду /restart и заново запустите команду.",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_1"
      }
    }
  },
  "Задания": {
    "Уровень 1 — разворот": {
      "content": "Задача: Повернуть на месте на 90 градусов вправо.\n\nПодсказка:\nИспользуйте метод управления control(linear, angular). Чтобы повернуть, установите линейную скорость в 0, а угловую — положительную, например 100.\nДля поворота на заданный угол используйте библиотеку time.\n\nПример кода:\n\nimport time\nfrom minecraft_academy import MinecraftAcademy\n\nrobot = MinecraftAcademy('IP адрес', 'токен')\nrobot.start()\n\ntry:\n    ellapsed = time.now()\n    while True:\n        linear, angular = 0, 100\n        if (time.now() - ellapsed) > 1: #если прошло больше одной секунды\n            linear, angular = 100, 0\n        robot.control(linear, angular)\nexcept KeyboardInterrupt:\n    robot.stop()",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_2"
      }
    },
    "Уровень 2 — движение по времени": {
      "content": "Задача: Проехать строго 5 блоков вперёд.\n\nПодсказка:\nВычислите, сколько миллисекунд потребуется роботу для проезда 5 блоков при заданной линейной скорости. Установите угловую скорость в 0.\n\nПример кода:\n\nfrom minecraft_academy import MinecraftAcademy\nimport time\n\nrobot = MinecraftAcademy('IP адрес', 'токен')\nrobot.start()\n\ntry:\n    robot.control(100, 0)\n    time.sleep(1.2)\n    robot.control(0, 0)\nexcept KeyboardInterrupt:\n    robot.stop()",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_3"
      }
    },
    "Уровень 3 — движение по энкодерам": {
      "content": "Задача: Проехать 3 блока, используя данные с энкодеров.\n\nПодсказка:\nЭнкодеры возвращают значение, пропорциональное пройденному расстоянию. Используйте метод get_sensors()['le'] для получения текущего значения на левом колесе и get_sensors()['re'] для правого колеса.\n\nПример кода:\n\nfrom minecraft_academy import MinecraftAcademy\n\nrobot = MinecraftAcademy('IP адрес', 'токен')\nrobot.start()\n\ntry:\n    start = robot.get_sensors()['re']\n    while True:\n        current = robot.get_sensors()['re']\n        if current - start >= 300:\n            robot.control(0, 0)\n            break\n        robot.control(100, 0)\nexcept KeyboardInterrupt:\n    robot.stop()",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_4"
      }
    },
    "Уровень 4 — обход препятствий": {
      "content": "Задача: Объехать препятствие перед роботом и доехать до финиша.\n\nПодсказка:\nИспользуйте 2D лидар через метод get_sensors()['lidar_2d']. Проверьте расстояние по направлению вперёд (например, индекс 18 — это 180°).\n\nПример кода:\n\nfrom minecraft_academy import MinecraftAcademy\n\nrobot = MinecraftAcademy('IP адрес', 'токен')\nrobot.start()\n\ntry:\n    while True:\n        data = robot.get_sensors()\n        if data['lidar_2d'][18] < 0.5:\n            robot.control(0, 100)\n        else:\n            robot.control(100, 0)\nexcept KeyboardInterrupt:\n    robot.stop()",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_5"
      }
    },
    "Уровень 5 — следование по линии": {
      "content": "Задача: Следовать по чёрной линии, не отклоняясь.\n\nПодсказка:\nИспользуйте get_sensors()['color'], чтобы получить яркость блока под роботом. Если значение ниже 50 — робот на линии. Если выше — необходимо скорректировать направление.\n\nПример кода:\n\nfrom minecraft_academy import MinecraftAcademy\n\nrobot = MinecraftAcademy('IP адрес', 'токен')\nrobot.start()\n\ntry:\n    while True:\n        data = robot.get_sensors()\n        if data['color'] < 50:\n            robot.control(100, 0)\n        else:\n            robot.control(100, 50)\nexcept KeyboardInterrupt:\n    robot.stop()",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_6"
      }
    },
    "Уровень 6 — движение вдоль стены": {
      "content": "Задача: Проехать вдоль стены, удерживая постоянное расстояние.\n\nПодсказка:\nИспользуйте get_sensors()['distance_sensors'], особенно значение слева от робота (например, нулевой элемент массива). Если расстояние слишком маленькое — отъезжайте, если большое — приближайтесь.\n\nПример кода:\n\nfrom minecraft_academy import MinecraftAcademy\n\nrobot = MinecraftAcademy('IP адрес', 'токен')\nrobot.start()\n\ntry:\n    while True:\n        dist = robot.get_sensors()['distance_sensors'][0]\n        if dist < 0.3:\n            robot.control(100, 20)\n        elif dist > 0.7:\n            robot.control(100, -20)\n        else:\n            robot.control(100, 0)\nexcept KeyboardInterrupt:\n    robot.stop()\n\nЭтот датчик возвращает 8 значений [19, 18, ..., 1.3, 1], где каждое значение расположено под углом 22.5 градуса, начиная с левой стороны робота\n\n123\n0r4\n765\nr - робот, 0,1,2... расположение датчиков по их порядку",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_7"
      }
    }
  }
}

