{
  "Введение": {
    "О платформе": {
      "content": "Данная платформа предназначена для обучения основам робототехники в игровой среде Minecraft. Игроки могут создавать, программировать и тестировать поведение виртуального робота в симулированной среде с использованием языка Python. Платформа поддерживает сенсоры, обмен данными по сети и режим многопользовательского взаимодействия."
    },
    "Установка": {
      "content": "Для начала работы необходимо подключиться к Minecraft-серверу, на котором установлен мод MinecraftAcademy. Дополнительно требуется Python-клиент, который вы можете установить из GitHub-репозитория проекта или использовать готовый модуль academy-client. Убедитесь, что сервер и клиент находятся в одной сети или имеют доступ друг к другу по IP и порту."
    }
  },
  "Команды": {
    "Команды платформы": {
      "content": "/create_room — создать комнату\n/join_room <код> — присоединиться к комнате\n/leave_room — покинуть комнату\n/invite <игрок> <роль> — пригласить игрока\n/hide_player — скрыть игроков\n/hide_robot — скрыть роботов"
    },
    "Команды робота": {
      "content": "Программное управление осуществляется через Python. Пример использования:\nclient.control(0.5, 0.1) — движение вперед с небольшой угловой скоростью\nclient.get_sensors() — получить данные с датчиков"
    }
  },
  "Токены и роли": {
    "Что такое токен": {
      "content": "Токен — это уникальный идентификатор, автоматически выдаваемый при входе на сервер. Он позволяет авторизоваться в Python-клиенте и получить доступ к управлению роботом. Токен генерируется на основе вашего имени и IP-адреса и хранится только на сервере. Вы можете увидеть его в чате при первом подключении."
    },
    "Роли": {
      "content": "Роли позволяют разграничивать действия игроков:\n• Teacher — может управлять запуском роботов, приглашать игроков\n• Operator — может управлять своим роботом\n• Observer — только наблюдение\nРоли назначаются через команду /invite или в интерфейсе комнаты."
    }
  },
  "Примеры кода": {
    "Базовая программа": {
      "content": "from academy_client import AcademyClient\n\nclient = AcademyClient(token='ваш_токен')\nclient.connect()\nwhile True:\n    sensors = client.get_sensors()\n    client.control(0.4, 0.0)"
    },
    "Получение данных с датчиков": {
      "content": "sensors = client.get_sensors()\nprint(sensors['2d_lidar'])\nprint(sensors['color'])"
    }
  },
  "Датчики": {
    "2D лидар": {
      "content": "Датчик, производящий обзор по горизонтали вокруг робота. Возвращает массив расстояний от 0° до 360° через заданный шаг (по умолчанию 10°)."
    },
    "3D лидар": {
      "content": "Производит сканирование в трёхмерной среде, включая вертикальные углы. Полезен для построения пространственной карты."
    },
    "Линия": {
      "content": "Определяет яркость блока под роботом. Применим в задачах следования по линии."
    },
    "Дальномеры": {
      "content": "Датчики настраиваются с заданным углом и возвращают расстояние до ближайшего объекта. Удобны для простого определения препятствий."
    }
  },
  "Задания": {
    "Уровень 1 — движение": {
      "content": "Задача: пройти по прямой 5 блоков.\nПодсказка: используйте метод control(linear, angular).",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_1"
      }
    },
    "Уровень 2 — разворот": {
      "content": "Задача: повернуть на 90 градусов вправо.\nПодсказка: увеличьте угловую скорость.",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_2"
      }
    },
    "Уровень 3 — следование по линии": {
      "content": "Задача: следовать по черной линии.\nПодсказка: используйте датчик линии и корректируйте поворот.",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_3"
      }
    },
    "Уровень 4 — обход препятствий": {
      "content": "Задача: объехать препятствие и вернуться на линию.\nПодсказка: используйте дальномеры и 2D лидар.",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_4"
      }
    },
    "Уровень 5 — найти финиш": {
      "content": "Задача: доехать до блока финиша.\nПодсказка: комбинируйте сенсоры и создайте карту местности.",
      "button": {
        "button_text": "Перейти к уровню",
        "level": "level_5"
      }
    }
  }
}
